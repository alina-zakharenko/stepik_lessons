{"name": "test_guest_can_add_product_to_basket[http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7]", "status": "skipped", "statusDetails": {"message": "XFAIL Задание: независимость контента, ищем баг\n\nAssertionError", "trace": "self = <module_5.test_product_page.TestProductPage object at 0x0000022D20BF6F10>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c938249f22094c494774146239c3ceaa\")>\nlink = 'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7'\n\n    @pytest.mark.parametrize('link', [\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer0\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer1\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer2\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer3\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer4\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer5\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer6\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer8\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer9\"])\n    #\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=newYear\"\n    \n    @pytest.mark.xfail(reason=\"Задание: независимость контента, ищем баг\")\n    def test_guest_can_add_product_to_basket(self, browser, link):\n        # Data\n        product_name = \"Coders at Work\"\n        template = \"{} has been added to your basket.\"\n        basket_total_price = \"£19.99\"\n        # Arrange\n        link = f\"{link}\"\n        page = ProductPage(browser,\n                           link)  # инициализируем Page Object, передаем в конструктор экземпляр драйвера и url адрес\n        # Act\n        page.open()  # открываем страницу\n        #page.should_be_product_page()\n        #page.should_be_login_url()\n        page.should_be_add_btn()\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n        # Assert\n>       page.check_add_to_basket_notification(product_name, template)\n\ntest_product_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x0000022D20C85A00>, expected_product_name = 'Coders at Work'\nexpected_notification_template = '{} has been added to your basket.'\n\n    def check_add_to_basket_notification(self, expected_product_name, expected_notification_template):\n        expected_notification_text = expected_notification_template.format(expected_product_name)\n        actual_notification_text = self.browser.find_element(By.CSS_SELECTOR, \".alert:nth-child(1) .alertinner\").text\n        print(\"Actual product name is \" + actual_notification_text, \"Expected product name is \" + expected_notification_text)\n>       assert actual_notification_text == expected_notification_text\nE       AssertionError\n\npages\\product_page.py:37: AssertionError"}, "attachments": [{"name": "stdout", "source": "2a55d3ca-462f-4f4c-80f0-02cd084a2689-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "link", "value": "'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7'"}], "start": 1608117461229, "stop": 1608117464077, "uuid": "bb569598-a175-412e-9fae-0691fb9fac42", "historyId": "28e343e62f194c14b09363d15b41c810", "testCaseId": "0dfdfd1797a0034073e745572a047fc5", "fullName": "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "@pytest.mark.xfail(reason='Задание: независимость контента, ищем баг')"}, {"name": "parentSuite", "value": "module_5"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "spbnb-prc2461"}, {"name": "thread", "value": "49796-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "module_5.test_product_page"}]}